// <auto-generated />
using Infraestructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infraestructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Disponibilidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<int>("IdUbicacion")
                        .HasColumnType("int")
                        .HasColumnName("IdUbicacion");

                    b.Property<int>("IdVehiculo")
                        .HasColumnType("int")
                        .HasColumnName("IdVehiculo");

                    b.HasKey("Id");

                    b.HasIndex("IdUbicacion");

                    b.HasIndex("IdVehiculo");

                    b.ToTable("Disponibilidad", (string)null);
                });

            modelBuilder.Entity("Domain.Ubicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Localidad");

                    b.HasKey("Id");

                    b.ToTable("Ubicacion", (string)null);
                });

            modelBuilder.Entity("Domain.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("Ano");

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit")
                        .HasColumnName("Disponible");

                    b.Property<string>("Localizacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Localizacion");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Marca");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Interes");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Precio");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Tipo");

                    b.HasKey("Id");

                    b.ToTable("Vehiculo", (string)null);
                });

            modelBuilder.Entity("Domain.Disponibilidad", b =>
                {
                    b.HasOne("Domain.Ubicacion", "Ubicacion")
                        .WithMany("Disponibilidad")
                        .HasForeignKey("IdUbicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Vehiculo", "Vehiculo")
                        .WithMany("Disponibilidad")
                        .HasForeignKey("IdVehiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ubicacion");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("Domain.Ubicacion", b =>
                {
                    b.Navigation("Disponibilidad");
                });

            modelBuilder.Entity("Domain.Vehiculo", b =>
                {
                    b.Navigation("Disponibilidad");
                });
#pragma warning restore 612, 618
        }
    }
}
